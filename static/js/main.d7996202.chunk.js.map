{"version":3,"sources":["component/UI/MyModal/MyModal.module.css","component/UI/button/MyButton.module.css","component/UI/input/MyInput.module.css","component/UI/Loading/Loader.module.css","component/UI/button/MyButton.jsx","context/index.js","component/UI/Navbar/Navbar.jsx","utils/pages.js","component/UI/pagination/Pagination.jsx","hooks/usePosts.js","API/PostService.js","hooks/useFetching.js","component/UI/input/MyInput.jsx","component/PostForm.jsx","component/UI/MyModal/MyModal.jsx","component/UI/select/MySelect.jsx","component/PostFilter.jsx","component/PostItem.jsx","component/PostList.jsx","component/UI/Loading/Loader.jsx","router/index.js","pages/Post.jsx","pages/PostIdPage.jsx","pages/Login.jsx","component/AppRouter.jsx","App.js","index.js"],"names":["module","exports","MyButton","children","props","className","classes","myBtn","AuthContext","createContext","Navbar","useContext","setIsAuth","isAuth","onClick","localStorage","removeItem","to","getPageCount","totalCount","limit","Math","ceil","Pagination","totalPages","page","changePage","pagesArray","result","i","push","getPagesArray","map","p","usePosts","posts","sort","query","sortedPosts","useMemo","a","b","localeCompare","useSortedPosts","filter","post","title","toLowerCase","includes","PostService","axios","get","params","_limit","_page","response","id","useFetching","callback","useState","isLoading","setIsLoading","error","setError","message","MyInput","myInput","PostForm","create","body","setPost","value","onChange","e","target","type","placeholder","preventDefault","newPost","Date","now","MyModal","visible","setVisible","rootClasses","cl","myModal","active","join","myModalContent","stopPropagation","MySelect","option","defaultValue","event","disabled","name","PostFilter","setFilter","selectedSort","PostItem","router","useHistory","number","remove","PostList","length","style","textAlign","TransitionGroup","index","CSSTransition","timeout","classNames","Loader","loader","privateRoutes","path","component","setPosts","modal","setModal","setTotalPages","setPage","sortedAndSearchedPosts","getAll","data","headers","fetchPosts","isPostsLoading","postError","useEffect","marginTop","margin","display","justifyContent","exact","useParams","comments","setComments","getById","fetchPostById","getCommentsByPostId","fetchComments","isComLoading","comm","email","publicRoutes","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","blurHandler","onSubmit","setItem","test","String","emailHandler","onBlur","color","passwordHandler","AppRouter","route","App","setLoading","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7996202.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__3RVTa\",\"myModalContent\":\"MyModal_myModalContent__3VD32\",\"active\":\"MyModal_active__cfehq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__1kiz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__23o3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1tccL\",\"rotate\":\"Loader_rotate__3t69A\"};","import React from \"react\";\r\nimport classes from './MyButton.module.css'\r\n\r\nconst MyButton = ({children, ...props}) => {\r\n  return(\r\n    <button {...props} className={classes.myBtn}>\r\n        {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MyButton ;\r\n","import {createContext} from \"react\";\n\nexport const AuthContext = createContext(null)","import React, {useContext} from 'react';\nimport {Link} from \"react-router-dom\";\nimport MyButton from \"../button/MyButton\";\nimport {AuthContext} from \"../../../context\";\n\nconst Navbar = () => {\n    const {isAuth, setIsAuth} = useContext(AuthContext)\n    const logout = () =>{\n        setIsAuth(false)\n        localStorage.removeItem('auth')\n    }\n    return(\n        <div className='navbar'>\n            <MyButton onClick = {logout}>Выйти</MyButton>\n            <div className='navbar__links'>\n                <Link to='/posts'>Посты</Link>\n            </div>\n        </div>\n    )\n};\n\nexport default Navbar;","export const getPageCount = (totalCount, limit) =>{\r\n  return Math.ceil(totalCount / limit)\r\n}\r\n\r\nexport const getPagesArray = (totalPages) =>{\r\n  let result = []\r\n  for(let i = 0; i < totalPages; i++){\r\n    result.push(i + 1)\r\n  }\r\n  return result\r\n}","import React from \"react\";\r\nimport { getPagesArray } from \"../../../utils/pages\";\r\n\r\nconst Pagination = ({totalPages, page, changePage}) => {\r\n\r\n  let pagesArray = getPagesArray(totalPages);\r\n\r\n  return (\r\n    <div className='page__wrapper'>\r\n    {pagesArray.map(p =>\r\n    <span onClick={() => changePage(p)} key={p} className={page === p ? 'page page__current' : 'page'}>{p}</span>\r\n    )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { useMemo } from \"react\";\r\n\r\nexport const useSortedPosts = (posts, sort) =>{\r\n  const sortedPosts = useMemo(() => {\r\n    if (sort) {\r\n      return [...posts].sort((a, b) =>\r\n        a[sort].localeCompare(b[sort])\r\n      );\r\n    }\r\n    return posts;\r\n  }, [sort, posts]);\r\n  return sortedPosts\r\n }\r\n\r\n export const usePosts = (posts, sort, query) =>{\r\n   const sortedPosts = useSortedPosts(posts, sort)\r\n  const sortedAndSearchedPosts = useMemo(() => {\r\n    return sortedPosts.filter((post) =>\r\n      post.title.toLowerCase().includes(query)\r\n    );\r\n  }, [query, sortedPosts]);\r\n\r\n  return sortedAndSearchedPosts\r\n}","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n  static async getAll(limit = 10, page = 1) {\r\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts\",{\r\n        params:{\r\n          _limit: limit,\r\n          _page:page,\r\n        }\r\n      });\r\n      return response\r\n  }\r\n\r\n  static async getById(id) {\r\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/posts/\" + id);\r\n      return response\r\n  }\r\n\r\n  static async getCommentsByPostId(id) {\r\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`);\r\n      return response\r\n  }\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useFetching = (callback) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n  \r\n  const fetching = async (...args) => {\r\n    try{\r\n      setIsLoading(true)\r\n      await callback(...args)\r\n    }catch(e){\r\n      setError(e.message)\r\n    }finally{\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n  return [fetching, isLoading, error]\r\n}","import React from \"react\";\r\nimport classes from './MyInput.module.css'\r\n\r\nconst MyInput =(props) => {\r\n  return(\r\n   <input  className={classes.myInput} {...props} />\r\n  );\r\n};\r\n\r\nexport default MyInput;","import React, {useState} from \"react\";\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\n\r\nconst PostForm= ({create}) => {\r\n  \r\n  const [post, setPost] = useState({title: '', body: ''})\r\n\r\n  const addNewPost = (e) =>{\r\n    e.preventDefault();\r\n    const newPost = {\r\n      ...post, id: Date.now()\r\n    }\r\n    create(newPost)\r\n    setPost({title: '', body: ''})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <MyInput value={post.title} onChange={e => setPost({...post, title: e.target.value})} type='text' placeholder='Название поста' />\r\n        <MyInput  value={post.body} onChange={e => setPost({...post, body: e.target.value})}  type='text' placeholder='Описание поста' />\r\n        <MyButton  onClick={addNewPost} >Создать пост</MyButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React from \"react\";\r\nimport cl from \"./MyModal.module.css\";\r\n\r\nconst MyModal = ({children, visible, setVisible}) => {\r\n\r\n  const rootClasses = [cl.myModal]\r\n  if(visible){\r\n    rootClasses.push(cl.active)\r\n  }\r\n\r\n  return (\r\n    <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n      <div className={cl.myModalContent} onClick={(e) => e.stopPropagation()}>\r\n         {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyModal;\r\n","import React from \"react\";\r\n\r\n\r\nconst MySelect = ({option, defaultValue, value, onChange}) => {\r\n  return(\r\n    <select value={value}\r\n    onChange={event=> onChange(event.target.value)}>\r\n        <option disabled value='value'>{defaultValue}</option>\r\n        {option.map(option => \r\n         <option key={option.value} value={option.value}>\r\n           {option.name}\r\n         </option>  \r\n        )}\r\n      </select>\r\n  );\r\n};\r\n\r\nexport default MySelect","import React from \"react\";\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MySelect from \"./UI/select/MySelect\";\r\n\r\nconst PostFilter = ({filter, setFilter}) => {\r\n  return (\r\n    <div>\r\n      <MyInput\r\n        placeholder=\"Поиск\"\r\n        value={filter.query}\r\n        onChange={(e) => setFilter({...filter , query: e.target.value})}\r\n      />\r\n      <MySelect\r\n        defaultValue=\"Сортировка по\"\r\n        value={filter.sort}\r\n        onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\r\n        option={[\r\n          { value: \"title\", name: \"По названию\" },\r\n          { value: \"body\", name: \"По описанию\" },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostFilter;\r\n","import React from \"react\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst PostItem = (props) => {\r\n    const router = useHistory()\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__content\">\r\n        <strong>{props.number}.{props.post.title}</strong>\r\n        <div>{props.post.body}</div>\r\n      </div>\r\n      <div className=\"post__btns\">\r\n        <MyButton onClick={() => props.remove(props.post)}> Удалить </MyButton>\r\n          <MyButton onClick={() => router.push(`/posts/${props.post.id}`)}> Открыть </MyButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport PostItem from \"./PostItem\";\r\n\r\nconst PostList= ({posts, title, remove}) => {\r\n  \r\n  if(!posts.length){\r\n    return (\r\n        <h1 style={{ textAlign: \"center\" }}>Посты не найдены !</h1>  \r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n          <h1 style={{textAlign:'center'}}>{title}</h1>\r\n          <TransitionGroup>\r\n              {posts.map((post,index) => \r\n              <CSSTransition\r\n              key={post.id}\r\n              timeout={500}\r\n              classNames='post'>\r\n                 <PostItem number={index + 1} remove={remove} post={post} key={post.id}/>\r\n              </CSSTransition>\r\n     )}\r\n          </TransitionGroup>\r\n    </div>\r\n  );\r\n}\r\nexport default PostList;\r\n","import React from \"react\";\r\nimport cl from './Loader.module.css'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={cl.loader}>\r\n       \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import Posts from \"../pages/Post\";\nimport PostIdPage from \"../pages/PostIdPage\";\nimport Login from \"../pages/Login\";\n\nexport const privateRoutes =[\n    {path: '/posts', component: Posts, exact: true},\n    {path: '/posts/:id', component: PostIdPage, exact: true},\n]\n\nexport const publicRoutes = [\n    {path: '/login', component: Login, exact: true},\n]","import React, {useEffect, useState} from \"react\";\r\nimport MyButton from \"../component/UI/button/MyButton\";\r\nimport Pagination from \"../component/UI/pagination/Pagination\";\r\nimport {usePosts} from \"../hooks/usePosts\";\r\nimport PostService from \"../API/PostService\";\r\nimport {useFetching} from \"../hooks/useFetching\";\r\nimport {getPageCount} from \"../utils/pages\";\r\nimport PostForm from \"../component/PostForm\";\r\nimport MyModal from \"../component/UI/MyModal/MyModal\";\r\nimport PostFilter from \"../component/PostFilter\";\r\nimport PostList from \"../component/PostList\";\r\nimport Loader from \"../component/UI/Loading/Loader\";\r\n\r\n\r\nconst Posts = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [filter, setFilter] = useState({sort: \"\", query: \"\"});\r\n    const [modal, setModal] = useState(false);\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [limit, setLimit] = useState(10)\r\n    const [page, setPage] = useState(1)\r\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n\r\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\r\n        const response = await PostService.getAll(limit, page);\r\n        setPosts(response.data)\r\n        const totalCount = response.headers['x-total-count']\r\n        setTotalPages(getPageCount(totalCount, limit))\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        fetchPosts(limit, page)\r\n    }, [page])\r\n\r\n    const createPost = (newPost) => {\r\n        setPosts([...posts, newPost]);\r\n        setModal(false)\r\n    };\r\n\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter((p) => p.id !== post.id));\r\n    };\r\n\r\n    const changePage = (page) => {\r\n        setPage(page)\r\n        fetchPosts(limit, page)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <MyButton style={{marginTop: '30px'}} onClick={() => setModal(true)}>\r\n                Создать пользователя\r\n            </MyButton>\r\n            <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm create={createPost}/>\r\n            </MyModal>\r\n            <hr style={{margin: \"15px 0\"}}/>\r\n            <PostFilter filter={filter} setFilter={setFilter}/>\r\n            {postError &&\r\n            <h1>Произошла ошибка ${postError}</h1>\r\n            }\r\n            {isPostsLoading\r\n                ? <div style={{display: 'flex', justifyContent: 'center', marginTop: '30px'}}><Loader/></div>\r\n                :<PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Список постов про JS\"/>\r\n            }\r\n            <Pagination page={page} changePage={changePage} totalPages={totalPages}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom'\nimport {useFetching} from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../component/UI/Loading/Loader\";\n\nconst PostIdPage = () => {\n    const params = useParams()\n    const [post, setPost] = useState({})\n    const [comments, setComments] = useState([])\n    const [fetchPostById, isLoading] = useFetching(async () => {\n        const response = await PostService.getById(params.id)\n        setPost(response.data)\n    })\n    const [fetchComments, isComLoading, comError] = useFetching(async () => {\n        const response = await PostService.getCommentsByPostId(params.id)\n        setComments(response.data)\n    })\n\n    useEffect(() => {\n        fetchPostById(params.id)\n        fetchComments(params.id)\n    }, [])\n\n    return (\n        <div>\n            <h1>Вы открыли страницу поста с ID = {params.id}</h1>\n            {isLoading\n                ? <Loader/>\n                : <div>{post.id}. {post.title}</div>\n            }\n            <h1>\n                Комментарии\n            </h1>\n            {isComLoading\n                ? <Loader/>\n                : <div>\n                    {comments.map(comm =>\n                        <div key={comm.id} style={{marginTop:'15px'}}>\n                            <h5>{comm.email}</h5>\n                            <div>{comm.body}</div>\n                        </div>\n                    )}\n            </div>\n            }\n        </div>\n    );\n}\n;\n\nexport default PostIdPage;","import React, {useContext, useEffect, useState} from 'react';\nimport MyInput from \"../component/UI/input/MyInput\";\nimport MyButton from \"../component/UI/button/MyButton\";\nimport {AuthContext} from \"../context\";\n\nconst Login = () => {\n    const {isAuth, setIsAuth} = useContext(AuthContext)\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [emailDirty, setEmailDirty] = useState(false)\n    const [passwordDirty, setPasswordDirty] = useState(false)\n    const [emailError, setEmailError] = useState(\"Емейл не может быть пустым\")\n    const [passwordError, setPasswordError] = useState(\"Пароль не может быть пустым\")\n    const [formValid, setFormValid] = useState(false)\n\n\n    useEffect(() =>{\n        if(emailError || passwordError){\n           setFormValid(false)\n        }else {\n           setFormValid(true)\n        }\n    }, [emailError, passwordError])\n\n    const login = event =>{\n        event.preventDefault()\n        setIsAuth(true)\n        localStorage.setItem('auth', 'true')\n    }\n\n    const emailHandler = e =>{\n      setEmail(e.target.value)\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if(!re.test(String(e.target.value).toLowerCase())){\n           setEmailError('Некорректный емейл')\n        }else {\n            setEmailError('')\n        };\n    }\n\n   const blurHandler = e =>{\n        switch (e.target.name){\n            case 'email':\n                setEmailDirty(true)\n                break\n            case 'password':\n                setPasswordDirty(true)\n                break\n        }\n   }\n\n   const passwordHandler = e =>{\n        setPassword(e.target.value)\n       if(e.target.value.length < 3 || e.target.value.length > 8){\n           setPasswordError('Пароль должен быть длиннее 3 и меньше 8')\n           if(!e.target.value){\n               setPasswordError('Пароль не может быть пустым')\n           }\n       }else{\n          setPasswordError('')\n       }\n   }\n    return (\n        <div>\n           <h1>Регистрация</h1>\n            <form onSubmit={login}>\n             <MyInput onChange={e => emailHandler(e)} value={email} onBlur={e => blurHandler(e)} name='email' type='text' placeholder='Введите логин' />\n                {(emailDirty && emailError)&& <div style={{color: 'red'}}>{emailError}</div>}\n             <MyInput onChange={e => passwordHandler(e)} value={password} onBlur={e => blurHandler(e)} name='password' type='password' placeholder='Введите пароль' />\n                {(passwordDirty && passwordError)&& <div style={{color: 'red'}}>{passwordError}</div>}\n             <MyButton disabled={!formValid}>Войти</MyButton>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;","import React, {useContext} from 'react';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {publicRoutes, privateRoutes} from \"../router\";\nimport {AuthContext} from \"../context\";\nimport Loader from \"./UI/Loading/Loader\";\n\nconst AppRouter = () => {\n    const {isAuth, isLoading} = useContext(AuthContext)\n\n    if(isLoading) {\n        return <Loader />\n    }\n    return (\n        isAuth\n            ? <Switch>\n                {privateRoutes.map(route =>\n                    <Route component={route.component}\n                           path={route.path}\n                           exact={route.exact}\n                           key={route.path}\n                    />\n                )}\n                <Redirect to='/posts'/>\n            </Switch>\n            : <Switch>\n                {publicRoutes.map(route =>\n                    <Route component={route.component}\n                           path={route.path}\n                           exact={route.exact}\n                           key={route.path}\n                    />\n                )}\n                <Redirect to='/login'/>\n            </Switch>\n\n    )\n};\n\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport \"./styles/App.css\";\nimport Navbar from \"./component/UI/Navbar/Navbar\";\nimport AppRouter from \"./component/AppRouter\";\nimport {AuthContext} from \"./context\";\n\nfunction App() {\n    const [isAuth, setIsAuth] = useState(false);\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() =>{\n        if(localStorage.getItem('auth')){\n            setIsAuth(true);\n        }\n        setLoading(false);\n    },[])\n\n  return (\n      <AuthContext.Provider value={{\n          isAuth,\n          setIsAuth,\n          isLoading\n      }}>\n          <BrowserRouter>\n              <Navbar />\n              <AppRouter />\n          </BrowserRouter>\n      </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}